package org.dasc.kotlin

// everything is per default final in kotlin. we need to actively open the class for inheritance

open class TestOpenClass(name: String) {

    // getter are generated by default

    // now make the setter private
    var name: String = name
        private set

    companion object {
        fun createTestOpenClass(name: String): TestOpenClass {
            return TestOpenClass(name);
        }
    }
}

// no visible difference between class and interface extension
class ExtensionTestClass: TestOpenClass, TestInterface {
    constructor(name: String): super(name) {}

    override fun method1(): Int {
        TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
    }
}

interface TestInterface {
    fun method1(): Int
}